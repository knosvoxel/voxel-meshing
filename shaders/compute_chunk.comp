#version 460 core

struct Voxel{
    vec3 pos;
    uint color_index;
};

struct Vertex{
    vec3 position;
    uint color_index;
};

struct DrawArraysIndirectCommand{
    uint count;
    uint instanceCount;
    uint first;
    uint baseInstance;
};

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout (binding = 0, std430) readonly buffer ssbo {
    Voxel voxels[];
};

layout (binding = 1, std430) writeonly buffer final_vertices {
    Vertex vertices[];
};

layout (binding = 2, std430) buffer indirect_buffer {
    DrawArraysIndirectCommand indirect_command;
};

void main() {

    uint voxelIndex = gl_GlobalInvocationID.x;

    Voxel voxel = voxels[voxelIndex];

    Vertex v;
    v.position = vec3(voxel.pos);
    v.color_index = uint(voxel.color_index);

    vertices[voxelIndex] = v; // TODO: should add three triangles instead
    atomicAdd(indirect_command.count, 1);
}